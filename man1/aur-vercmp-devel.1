.TH AUR\-VERCMP\-DEVEL 1 2018-12-04 AURUTILS
.SH NAME
aur\-vercmp\-devel \- retrieve latest revision for VCS packages

.SH DESCRIPTION
.BR aur\-vercmp\-devel (1)
takes the contents of a local repository
.RB ( "aur\-repo --list" )
and matches them against a common pattern for VCS packages
.RB ( "grep -E $AURVCS" ).
It then looks in the
.BR aur\-sync (1)
cache
.RB ( "find $AURDEST" )
for relevant directories.

Any existing
.BR PKGBUILD (5)
files in these directories are executed, with upstream sources updated
to their latest revision.
.RB ( aur\-srcver
using
.BR "makepkg -o" ).

Any option arguments are forwarded to
.BR aur\-repo (1).

.SH NOTES
In the last line, the resulting package versions
.RB ( "vcs_info" )
are compared against the local repository
.RB ( "db_info" ).
If the package version is newer, it is printed to stdout. This may be
combined with
.BR aur\-sync (1)
as follows:
.EX

  $ mapfile -t packages < <(aur vercmp-devel | cut -d: -f1)
  $ aur sync "${packages[@]}" --no-ver-shallow

.EE

Version-control packages typically have
.B pkgver
set to the upstream revision at the time of package submission, making
the AUR\-advertised version older than the latest version.

Here, the
.B --no-ver-shallow
option ignores the AUR information
.I only
for packages from standard input. Further arguments can be appended to
.BR aur\-sync (1),
such as
.I --upgrades
to update regular and VCS packages in one go.

.SS Populating the cache
As described, the above relies on already available
.BR PKGBUILD (5)
files. If the
.BR aur\-sync (1)
cache is sparse or the package has meanwhile been updated by the AUR
maintainer (for example, to indicate a new upstream source),
information reported by
.B aur\-vercmp-devel
may be incomplete.

The following mediates this by downloading all VCS packages in a local
repository anew, with all build files and their diffs offered for
inspection.
.EX

  $ mapfile -t packages < <(aur repo --list | cut -f1 | grep -E "$AURVCS")
  $ aur sync "${packages[@]}" --no-ver --print

.EE

\" The last pipeline will also show any non-VCS dependencies.  Since
\" the respective PKGBUILDs are not run by aur-srcver, they are not of
\" relevance. Use aur-fetch manually?

.SH AUTHORS
.MT https://github.com/AladW
Alad Wenter
.ME

.\" vim: set textwidth=72:
